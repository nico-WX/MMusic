//
//  ButtonStyleKit.m
//  ProjectName
//
//  Created by AuthorName on 2019/1/5.
//  Copyright Â© 2019 CompanyName. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//

#import "ButtonStyleKit.h"


@implementation ButtonStyleKit

#pragma mark Cache

static UIColor* _color = nil;

#pragma mark Initialization

+ (void)initialize
{
    // Colors Initialization
    _color = [UIColor colorWithRed: 0.513 green: 0.684 blue: 0.626 alpha: 1];

}

#pragma mark Colors

+ (UIColor*)color { return _color; }

#pragma mark Drawing Methods

+ (void)drawOnCanvas
{
    [ButtonStyleKit drawOnCanvasWithFrame: CGRectMake(0, 0, 60, 54) resizing: ButtonStyleKitResizingBehaviorStretch];
}

+ (void)drawOnCanvasWithFrame: (CGRect)targetFrame resizing: (ButtonStyleKitResizingBehavior)resizing
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();
    
    //// Resize to Target Frame
    CGContextSaveGState(context);
    CGRect resizedFrame = ButtonStyleKitResizingBehaviorApply(resizing, CGRectMake(0, 0, 60, 54), targetFrame);
    CGContextTranslateCTM(context, resizedFrame.origin.x, resizedFrame.origin.y);
    CGContextScaleCTM(context, resizedFrame.size.width / 60, resizedFrame.size.height / 54);


    //// Color Declarations
    UIColor* fillColor = [UIColor colorWithRed: 0.937 green: 0 blue: 0 alpha: 1];

    //// Page
    {
        //// OnShape Drawing
        UIBezierPath* onShapePath = [UIBezierPath bezierPath];
        [onShapePath moveToPoint: CGPointMake(60.04, 18.14)];
        [onShapePath addCurveToPoint: CGPointMake(42.56, 0.02) controlPoint1: CGPointMake(60.04, 8.15) controlPoint2: CGPointMake(52.19, 0.02)];
        [onShapePath addCurveToPoint: CGPointMake(30.04, 5.57) controlPoint1: CGPointMake(37.8, 0.02) controlPoint2: CGPointMake(33.3, 2.07)];
        [onShapePath addCurveToPoint: CGPointMake(17.53, 0.02) controlPoint1: CGPointMake(26.79, 2.07) controlPoint2: CGPointMake(22.28, 0.02)];
        [onShapePath addCurveToPoint: CGPointMake(0.04, 18.14) controlPoint1: CGPointMake(7.89, 0.02) controlPoint2: CGPointMake(0.04, 8.15)];
        [onShapePath addCurveToPoint: CGPointMake(0.1, 19.02) controlPoint1: CGPointMake(0.04, 18.48) controlPoint2: CGPointMake(0.08, 18.77)];
        [onShapePath addCurveToPoint: CGPointMake(0.09, 19.27) controlPoint1: CGPointMake(0.1, 19.1) controlPoint2: CGPointMake(0.09, 19.18)];
        [onShapePath addCurveToPoint: CGPointMake(1.37, 25.04) controlPoint1: CGPointMake(0.09, 21.03) controlPoint2: CGPointMake(0.52, 22.98)];
        [onShapePath addCurveToPoint: CGPointMake(1.45, 25.26) controlPoint1: CGPointMake(1.39, 25.12) controlPoint2: CGPointMake(1.42, 25.19)];
        [onShapePath addCurveToPoint: CGPointMake(28.16, 53.38) controlPoint1: CGPointMake(6.78, 38.02) controlPoint2: CGPointMake(27.29, 52.7)];
        [onShapePath addCurveToPoint: CGPointMake(29.99, 54) controlPoint1: CGPointMake(28.7, 53.79) controlPoint2: CGPointMake(29.35, 54)];
        [onShapePath addCurveToPoint: CGPointMake(31.85, 53.36) controlPoint1: CGPointMake(30.65, 54) controlPoint2: CGPointMake(31.3, 53.79)];
        [onShapePath addCurveToPoint: CGPointMake(57.03, 28.31) controlPoint1: CGPointMake(32.59, 52.78) controlPoint2: CGPointMake(50.09, 40.2)];
        [onShapePath addCurveToPoint: CGPointMake(57.66, 27.18) controlPoint1: CGPointMake(57.29, 27.91) controlPoint2: CGPointMake(57.49, 27.52)];
        [onShapePath addCurveToPoint: CGPointMake(57.83, 26.86) controlPoint1: CGPointMake(57.72, 27.07) controlPoint2: CGPointMake(57.77, 26.97)];
        [onShapePath addLineToPoint: CGPointMake(57.85, 26.82)];
        [onShapePath addCurveToPoint: CGPointMake(57.92, 26.7) controlPoint1: CGPointMake(57.87, 26.78) controlPoint2: CGPointMake(57.9, 26.73)];
        [onShapePath addCurveToPoint: CGPointMake(58.93, 24.4) controlPoint1: CGPointMake(58.34, 25.89) controlPoint2: CGPointMake(58.67, 25.14)];
        [onShapePath addCurveToPoint: CGPointMake(60.01, 19.27) controlPoint1: CGPointMake(59.65, 22.52) controlPoint2: CGPointMake(60.01, 20.84)];
        [onShapePath addCurveToPoint: CGPointMake(59.99, 18.95) controlPoint1: CGPointMake(60.01, 19.15) controlPoint2: CGPointMake(60, 19.04)];
        [onShapePath addCurveToPoint: CGPointMake(60.04, 18.14) controlPoint1: CGPointMake(60.02, 18.75) controlPoint2: CGPointMake(60.04, 18.47)];
        [onShapePath closePath];
        [fillColor setFill];
        [onShapePath fill];
    }
    
    CGContextRestoreGState(context);

}

+ (void)drawOffCanvas
{
    [ButtonStyleKit drawOffCanvasWithFrame: CGRectMake(0, 0, 60, 54) resizing: ButtonStyleKitResizingBehaviorStretch];
}

+ (void)drawOffCanvasWithFrame: (CGRect)targetFrame resizing: (ButtonStyleKitResizingBehavior)resizing
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();
    
    //// Resize to Target Frame
    CGContextSaveGState(context);
    CGRect resizedFrame = ButtonStyleKitResizingBehaviorApply(resizing, CGRectMake(0, 0, 60, 54), targetFrame);
    CGContextTranslateCTM(context, resizedFrame.origin.x, resizedFrame.origin.y);
    CGContextScaleCTM(context, resizedFrame.size.width / 60, resizedFrame.size.height / 54);


    //// Page
    {
        //// OnShape Drawing
        UIBezierPath* onShapePath = [UIBezierPath bezierPath];
        [onShapePath moveToPoint: CGPointMake(60.04, 18.14)];
        [onShapePath addCurveToPoint: CGPointMake(42.56, 0.02) controlPoint1: CGPointMake(60.04, 8.15) controlPoint2: CGPointMake(52.19, 0.02)];
        [onShapePath addCurveToPoint: CGPointMake(30.04, 5.57) controlPoint1: CGPointMake(37.8, 0.02) controlPoint2: CGPointMake(33.3, 2.07)];
        [onShapePath addCurveToPoint: CGPointMake(17.53, 0.02) controlPoint1: CGPointMake(26.79, 2.07) controlPoint2: CGPointMake(22.28, 0.02)];
        [onShapePath addCurveToPoint: CGPointMake(0.04, 18.14) controlPoint1: CGPointMake(7.89, 0.02) controlPoint2: CGPointMake(0.04, 8.15)];
        [onShapePath addCurveToPoint: CGPointMake(0.1, 19.02) controlPoint1: CGPointMake(0.04, 18.48) controlPoint2: CGPointMake(0.08, 18.77)];
        [onShapePath addCurveToPoint: CGPointMake(0.09, 19.27) controlPoint1: CGPointMake(0.1, 19.1) controlPoint2: CGPointMake(0.09, 19.18)];
        [onShapePath addCurveToPoint: CGPointMake(1.37, 25.04) controlPoint1: CGPointMake(0.09, 21.03) controlPoint2: CGPointMake(0.52, 22.98)];
        [onShapePath addCurveToPoint: CGPointMake(1.45, 25.26) controlPoint1: CGPointMake(1.39, 25.12) controlPoint2: CGPointMake(1.42, 25.19)];
        [onShapePath addCurveToPoint: CGPointMake(28.16, 53.38) controlPoint1: CGPointMake(6.78, 38.02) controlPoint2: CGPointMake(27.29, 52.7)];
        [onShapePath addCurveToPoint: CGPointMake(29.99, 54) controlPoint1: CGPointMake(28.7, 53.79) controlPoint2: CGPointMake(29.35, 54)];
        [onShapePath addCurveToPoint: CGPointMake(31.85, 53.36) controlPoint1: CGPointMake(30.65, 54) controlPoint2: CGPointMake(31.3, 53.79)];
        [onShapePath addCurveToPoint: CGPointMake(57.03, 28.31) controlPoint1: CGPointMake(32.59, 52.78) controlPoint2: CGPointMake(50.09, 40.2)];
        [onShapePath addCurveToPoint: CGPointMake(57.66, 27.18) controlPoint1: CGPointMake(57.29, 27.91) controlPoint2: CGPointMake(57.49, 27.52)];
        [onShapePath addCurveToPoint: CGPointMake(57.83, 26.86) controlPoint1: CGPointMake(57.72, 27.07) controlPoint2: CGPointMake(57.77, 26.97)];
        [onShapePath addLineToPoint: CGPointMake(57.85, 26.82)];
        [onShapePath addCurveToPoint: CGPointMake(57.92, 26.7) controlPoint1: CGPointMake(57.87, 26.78) controlPoint2: CGPointMake(57.9, 26.73)];
        [onShapePath addCurveToPoint: CGPointMake(58.93, 24.4) controlPoint1: CGPointMake(58.34, 25.89) controlPoint2: CGPointMake(58.67, 25.14)];
        [onShapePath addCurveToPoint: CGPointMake(60.01, 19.27) controlPoint1: CGPointMake(59.65, 22.52) controlPoint2: CGPointMake(60.01, 20.84)];
        [onShapePath addCurveToPoint: CGPointMake(59.99, 18.95) controlPoint1: CGPointMake(60.01, 19.15) controlPoint2: CGPointMake(60, 19.04)];
        [onShapePath addCurveToPoint: CGPointMake(60.04, 18.14) controlPoint1: CGPointMake(60.02, 18.75) controlPoint2: CGPointMake(60.04, 18.47)];
        [onShapePath closePath];
        [ButtonStyleKit.color setFill];
        [onShapePath fill];
    }
    
    CGContextRestoreGState(context);

}

+ (void)drawPreviousButton
{
    [ButtonStyleKit drawPreviousButtonWithFrame: CGRectMake(0, 0, 117, 68) resizing: ButtonStyleKitResizingBehaviorStretch];
}

+ (void)drawPreviousButtonWithFrame: (CGRect)targetFrame resizing: (ButtonStyleKitResizingBehavior)resizing
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();
    
    //// Resize to Target Frame
    CGContextSaveGState(context);
    CGRect resizedFrame = ButtonStyleKitResizingBehaviorApply(resizing, CGRectMake(0, 0, 117, 68), targetFrame);
    CGContextTranslateCTM(context, resizedFrame.origin.x, resizedFrame.origin.y);
    CGContextScaleCTM(context, resizedFrame.size.width / 117, resizedFrame.size.height / 68);


    //// Color Declarations
    UIColor* black = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];

    //// Previous Page
    {
        //// Polygon Drawing
        UIBezierPath* polygonPath = [UIBezierPath bezierPath];
        [polygonPath moveToPoint: CGPointMake(0.5, 33.04)];
        [polygonPath addLineToPoint: CGPointMake(57.5, 0.13)];
        [polygonPath addCurveToPoint: CGPointMake(58.87, 0.5) controlPoint1: CGPointMake(57.98, -0.14) controlPoint2: CGPointMake(58.59, 0.02)];
        [polygonPath addCurveToPoint: CGPointMake(59, 1) controlPoint1: CGPointMake(58.95, 0.65) controlPoint2: CGPointMake(59, 0.82)];
        [polygonPath addLineToPoint: CGPointMake(59, 66.82)];
        [polygonPath addCurveToPoint: CGPointMake(58, 67.82) controlPoint1: CGPointMake(59, 67.37) controlPoint2: CGPointMake(58.55, 67.82)];
        [polygonPath addCurveToPoint: CGPointMake(57.5, 67.68) controlPoint1: CGPointMake(57.82, 67.82) controlPoint2: CGPointMake(57.65, 67.77)];
        [polygonPath addLineToPoint: CGPointMake(0.5, 34.78)];
        [polygonPath addCurveToPoint: CGPointMake(0.13, 33.41) controlPoint1: CGPointMake(0.02, 34.5) controlPoint2: CGPointMake(-0.14, 33.89)];
        [polygonPath addCurveToPoint: CGPointMake(0.5, 33.04) controlPoint1: CGPointMake(0.22, 33.26) controlPoint2: CGPointMake(0.35, 33.13)];
        [polygonPath closePath];
        polygonPath.usesEvenOddFillRule = YES;
        [black setFill];
        [polygonPath fill];


        //// path- Drawing
        UIBezierPath* pathPath = [UIBezierPath bezierPath];
        [pathPath moveToPoint: CGPointMake(58.5, 33.04)];
        [pathPath addLineToPoint: CGPointMake(115.5, 0.13)];
        [pathPath addCurveToPoint: CGPointMake(116.87, 0.5) controlPoint1: CGPointMake(115.98, -0.14) controlPoint2: CGPointMake(116.59, 0.02)];
        [pathPath addCurveToPoint: CGPointMake(117, 1) controlPoint1: CGPointMake(116.95, 0.65) controlPoint2: CGPointMake(117, 0.82)];
        [pathPath addLineToPoint: CGPointMake(117, 66.82)];
        [pathPath addCurveToPoint: CGPointMake(116, 67.82) controlPoint1: CGPointMake(117, 67.37) controlPoint2: CGPointMake(116.55, 67.82)];
        [pathPath addCurveToPoint: CGPointMake(115.5, 67.68) controlPoint1: CGPointMake(115.82, 67.82) controlPoint2: CGPointMake(115.65, 67.77)];
        [pathPath addLineToPoint: CGPointMake(58.5, 34.78)];
        [pathPath addCurveToPoint: CGPointMake(58.13, 33.41) controlPoint1: CGPointMake(58.02, 34.5) controlPoint2: CGPointMake(57.86, 33.89)];
        [pathPath addCurveToPoint: CGPointMake(58.5, 33.04) controlPoint1: CGPointMake(58.22, 33.26) controlPoint2: CGPointMake(58.35, 33.13)];
        [pathPath closePath];
        pathPath.usesEvenOddFillRule = YES;
        [black setFill];
        [pathPath fill];
    }
    
    CGContextRestoreGState(context);

}

+ (void)drawNextButton
{
    [ButtonStyleKit drawNextButtonWithFrame: CGRectMake(0, 0, 117, 68) resizing: ButtonStyleKitResizingBehaviorStretch];
}

+ (void)drawNextButtonWithFrame: (CGRect)targetFrame resizing: (ButtonStyleKitResizingBehavior)resizing
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();
    
    //// Resize to Target Frame
    CGContextSaveGState(context);
    CGRect resizedFrame = ButtonStyleKitResizingBehaviorApply(resizing, CGRectMake(0, 0, 117, 68), targetFrame);
    CGContextTranslateCTM(context, resizedFrame.origin.x, resizedFrame.origin.y);
    CGContextScaleCTM(context, resizedFrame.size.width / 117, resizedFrame.size.height / 68);


    //// Color Declarations
    UIColor* black = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];

    //// Next Page
    {
        //// Polygon Drawing
        UIBezierPath* polygonPath = [UIBezierPath bezierPath];
        [polygonPath moveToPoint: CGPointMake(116.5, 34.77)];
        [polygonPath addLineToPoint: CGPointMake(59.5, 67.68)];
        [polygonPath addCurveToPoint: CGPointMake(58.13, 67.32) controlPoint1: CGPointMake(59.02, 67.96) controlPoint2: CGPointMake(58.41, 67.8)];
        [polygonPath addCurveToPoint: CGPointMake(58, 66.82) controlPoint1: CGPointMake(58.05, 67.17) controlPoint2: CGPointMake(58, 66.99)];
        [polygonPath addLineToPoint: CGPointMake(58, 1)];
        [polygonPath addCurveToPoint: CGPointMake(59, 0) controlPoint1: CGPointMake(58, 0.45) controlPoint2: CGPointMake(58.45, 0)];
        [polygonPath addCurveToPoint: CGPointMake(59.5, 0.13) controlPoint1: CGPointMake(59.18, 0) controlPoint2: CGPointMake(59.35, 0.05)];
        [polygonPath addLineToPoint: CGPointMake(116.5, 33.04)];
        [polygonPath addCurveToPoint: CGPointMake(116.87, 34.41) controlPoint1: CGPointMake(116.98, 33.32) controlPoint2: CGPointMake(117.14, 33.93)];
        [polygonPath addCurveToPoint: CGPointMake(116.5, 34.77) controlPoint1: CGPointMake(116.78, 34.56) controlPoint2: CGPointMake(116.65, 34.69)];
        [polygonPath closePath];
        polygonPath.usesEvenOddFillRule = YES;
        [black setFill];
        [polygonPath fill];


        //// path- Drawing
        UIBezierPath* pathPath = [UIBezierPath bezierPath];
        [pathPath moveToPoint: CGPointMake(58.5, 34.77)];
        [pathPath addLineToPoint: CGPointMake(1.5, 67.68)];
        [pathPath addCurveToPoint: CGPointMake(0.13, 67.32) controlPoint1: CGPointMake(1.02, 67.96) controlPoint2: CGPointMake(0.41, 67.8)];
        [pathPath addCurveToPoint: CGPointMake(0, 66.82) controlPoint1: CGPointMake(0.05, 67.17) controlPoint2: CGPointMake(0, 66.99)];
        [pathPath addLineToPoint: CGPointMake(0, 1)];
        [pathPath addCurveToPoint: CGPointMake(1, 0) controlPoint1: CGPointMake(0, 0.45) controlPoint2: CGPointMake(0.45, 0)];
        [pathPath addCurveToPoint: CGPointMake(1.5, 0.13) controlPoint1: CGPointMake(1.18, 0) controlPoint2: CGPointMake(1.35, 0.05)];
        [pathPath addLineToPoint: CGPointMake(58.5, 33.04)];
        [pathPath addCurveToPoint: CGPointMake(58.87, 34.41) controlPoint1: CGPointMake(58.98, 33.32) controlPoint2: CGPointMake(59.14, 33.93)];
        [pathPath addCurveToPoint: CGPointMake(58.5, 34.77) controlPoint1: CGPointMake(58.78, 34.56) controlPoint2: CGPointMake(58.65, 34.69)];
        [pathPath closePath];
        pathPath.usesEvenOddFillRule = YES;
        [black setFill];
        [pathPath fill];
    }
    
    CGContextRestoreGState(context);

}

+ (void)drawPlayButton
{
    [ButtonStyleKit drawPlayButtonWithFrame: CGRectMake(0, 0, 59, 68) resizing: ButtonStyleKitResizingBehaviorStretch];
}

+ (void)drawPlayButtonWithFrame: (CGRect)targetFrame resizing: (ButtonStyleKitResizingBehavior)resizing
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();
    
    //// Resize to Target Frame
    CGContextSaveGState(context);
    CGRect resizedFrame = ButtonStyleKitResizingBehaviorApply(resizing, CGRectMake(0, 0, 59, 68), targetFrame);
    CGContextTranslateCTM(context, resizedFrame.origin.x, resizedFrame.origin.y);
    CGContextScaleCTM(context, resizedFrame.size.width / 59, resizedFrame.size.height / 68);


    //// Color Declarations
    UIColor* black = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];

    //// Play Drawing
    UIBezierPath* playPath = [UIBezierPath bezierPath];
    [playPath moveToPoint: CGPointMake(58.5, 34.77)];
    [playPath addLineToPoint: CGPointMake(1.5, 67.68)];
    [playPath addCurveToPoint: CGPointMake(0.13, 67.32) controlPoint1: CGPointMake(1.02, 67.96) controlPoint2: CGPointMake(0.41, 67.8)];
    [playPath addCurveToPoint: CGPointMake(0, 66.82) controlPoint1: CGPointMake(0.05, 67.17) controlPoint2: CGPointMake(0, 66.99)];
    [playPath addLineToPoint: CGPointMake(0, 1)];
    [playPath addCurveToPoint: CGPointMake(1, 0) controlPoint1: CGPointMake(0, 0.45) controlPoint2: CGPointMake(0.45, 0)];
    [playPath addCurveToPoint: CGPointMake(1.5, 0.13) controlPoint1: CGPointMake(1.18, 0) controlPoint2: CGPointMake(1.35, 0.05)];
    [playPath addLineToPoint: CGPointMake(58.5, 33.04)];
    [playPath addCurveToPoint: CGPointMake(58.87, 34.41) controlPoint1: CGPointMake(58.98, 33.32) controlPoint2: CGPointMake(59.14, 33.93)];
    [playPath addCurveToPoint: CGPointMake(58.5, 34.77) controlPoint1: CGPointMake(58.78, 34.56) controlPoint2: CGPointMake(58.65, 34.69)];
    [playPath closePath];
    playPath.usesEvenOddFillRule = YES;
    [black setFill];
    [playPath fill];
    
    CGContextRestoreGState(context);

}

+ (void)drawPauseButton
{
    [ButtonStyleKit drawPauseButtonWithFrame: CGRectMake(0, 0, 80, 80) resizing: ButtonStyleKitResizingBehaviorStretch];
}

+ (void)drawPauseButtonWithFrame: (CGRect)targetFrame resizing: (ButtonStyleKitResizingBehavior)resizing
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();
    
    //// Resize to Target Frame
    CGContextSaveGState(context);
    CGRect resizedFrame = ButtonStyleKitResizingBehaviorApply(resizing, CGRectMake(0, 0, 80, 80), targetFrame);
    CGContextTranslateCTM(context, resizedFrame.origin.x, resizedFrame.origin.y);
    CGContextScaleCTM(context, resizedFrame.size.width / 80, resizedFrame.size.height / 80);


    //// Color Declarations
    UIColor* black = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];

    //// Pause Page
    {
        //// Rectangle 2 Drawing
        UIBezierPath* rectangle2Path = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(45, 0, 35, 80) cornerRadius: 4];
        [black setFill];
        [rectangle2Path fill];


        //// path- Drawing
        UIBezierPath* pathPath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(0, 0, 35, 80) cornerRadius: 4];
        [black setFill];
        [pathPath fill];
    }
    
    CGContextRestoreGState(context);

}

+ (void)drawStopButton
{
    [ButtonStyleKit drawStopButtonWithFrame: CGRectMake(0, 0, 80, 80) resizing: ButtonStyleKitResizingBehaviorStretch];
}

+ (void)drawStopButtonWithFrame: (CGRect)targetFrame resizing: (ButtonStyleKitResizingBehavior)resizing
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();
    
    //// Resize to Target Frame
    CGContextSaveGState(context);
    CGRect resizedFrame = ButtonStyleKitResizingBehaviorApply(resizing, CGRectMake(0, 0, 80, 80), targetFrame);
    CGContextTranslateCTM(context, resizedFrame.origin.x, resizedFrame.origin.y);
    CGContextScaleCTM(context, resizedFrame.size.width / 80, resizedFrame.size.height / 80);


    //// Color Declarations
    UIColor* black = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];

    //// Stop Page Drawing
    UIBezierPath* stopPagePath = [UIBezierPath bezierPathWithRoundedRect: CGRectMake(0, 0, 80, 80) cornerRadius: 4];
    [black setFill];
    [stopPagePath fill];
    
    CGContextRestoreGState(context);

}

@end



CGRect ButtonStyleKitResizingBehaviorApply(ButtonStyleKitResizingBehavior behavior, CGRect rect, CGRect target)
{
    if (CGRectEqualToRect(rect, target) || CGRectEqualToRect(target, CGRectZero))
        return rect;

    CGSize scales = CGSizeZero;
    scales.width = ABS(target.size.width / rect.size.width);
    scales.height = ABS(target.size.height / rect.size.height);

    switch (behavior)
    {
        case ButtonStyleKitResizingBehaviorAspectFit:
        {
            scales.width = MIN(scales.width, scales.height);
            scales.height = scales.width;
            break;
        }
        case ButtonStyleKitResizingBehaviorAspectFill:
        {
            scales.width = MAX(scales.width, scales.height);
            scales.height = scales.width;
            break;
        }
        case ButtonStyleKitResizingBehaviorStretch:
            break;
        case ButtonStyleKitResizingBehaviorCenter:
        {
            scales.width = 1;
            scales.height = 1;
            break;
        }
    }

    CGRect result = CGRectStandardize(rect);
    result.size.width *= scales.width;
    result.size.height *= scales.height;
    result.origin.x = target.origin.x + (target.size.width - result.size.width) / 2;
    result.origin.y = target.origin.y + (target.size.height - result.size.height) / 2;
    return result;
}
